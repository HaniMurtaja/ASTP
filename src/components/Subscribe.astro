---
import content from '~/content/ar';

const CF_SITE_KEY = import.meta.env.CF_TURNSTILE_SITE_KEY;
const SUCCESS_MSG = content.subscribe.success;
const ERROR_MSG = content.subscribe.error;
const ALREADY_MSG = content.subscribe.already;
const CLOSE_TEXT = content.subscribe.close;
const locale = Astro.currentLocale || 'ar';
---

<div class="flex main-padding flex-col items-center gap-8 xl:gap-14 lg:gap-[70px] pt-9 pb-[196px] bg-page">
  <h3 class="text-primary-light font-medium text-xl xl:text-[40px]">
    {content.subscribe.title}
  </h3>

  <div class="relative w-full lg:w-[40%]">
    <form id="news-letter-form" class="relative flex flex-col items-center w-full gap-2">
      <div class="relative w-full">
        <input
          type="email"
          class="w-full px-4 text-secondary [&:user-invalid]:bg-rose-300 valid:bg-white placeholder:text-primary hover:text-secondary font-bold focus:text-secondary transition-all placeholder:text-opacity-80 hover:bg-white focus:bg-white outline-none bg-[#F5F5F580] border border-[#D9D9D9] rounded-full h-[40px] xl:h-[60px]"
          placeholder={content.subscribe.email}
          required
        />
        <button
          type="submit"
          class="px-12 absolute flex-shrink outline-none hover:scale-105 focus:scale-105 transition-all w-1/2 xl:w-auto end-0 placeholder:px-8 xl:absolute rounded-full bg-primary-light text-[#F5F5F5] txl:ext-2xl h-[40px] xl:h-[60px]"
        >
          <span class="submit-text">{content.subscribe.subBtn}</span>
          <span class="hidden loading-spinner">
            <svg class="w-5 h-5 animate-spin" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path
                class="opacity-75"
                fill="currentColor"
                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
              ></path>
            </svg>
          </span>
        </button>
      </div>
      <div class="turnstile-container"></div>
    </form>

    <div class="absolute inset-0 flex items-center justify-center hidden thank-you-overlay">
      <div
        class="flex flex-col items-center max-w-xs gap-4 p-8 text-center bg-white rounded-lg shadow-lg bg-opacity-95 backdrop-blur-md"
      >
        <p id="subscribe-message" class="text-xl text-primary-light"></p>
        <button class="px-4 py-2 text-white rounded-full close-overlay bg-primary-light">{CLOSE_TEXT}</button>
      </div>
    </div>

    <!-- Add Turnstile script in your layout or head -->
    <script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>
    <script is:inline define:vars={{ CF_SITE_KEY, SUCCESS_MSG, ERROR_MSG, ALREADY_MSG, CLOSE_TEXT, locale }}>
  document.addEventListener('astro:page-load', () => {
        const form = document.querySelector('#news-letter-form');
        if(!form) console.log('no subscribe form');return;
        const submitText = form.querySelector('.submit-text');
        const loadingSpinner = form.querySelector('.loading-spinner');
        const overlay = document.querySelector('.thank-you-overlay');
        const messageEl = document.querySelector('#subscribe-message');
        const closeOverlayBtn = document.querySelector('.close-overlay');

        const showOverlay = (msg) => {
          messageEl.textContent = msg;
          overlay.classList.remove('hidden');
        };

        form.addEventListener('submit', async (event) => {
          event.preventDefault();

          // Show loading state
          submitText.classList.add('hidden');
          loadingSpinner.classList.remove('hidden');

          const emailInput = form.querySelector('#news-letter-form input[type="email"]');
          const email = emailInput.value;
          const token = turnstile.getResponse();

          try {
            const res = await fetch(`/${locale}/api/subscribe.json`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ email, token }),
            });

            const data = await res.json();
            if (res.ok && data.success) {
              showOverlay(SUCCESS_MSG);
            } else if (data.error && data.error?.toLowerCase().includes('already')) {
              showOverlay(ALREADY_MSG);
            } else {
              showOverlay(ERROR_MSG);
            }
          } catch (err) {
            console.error('Subscribe error:', err);
            showOverlay(ERROR_MSG);
          } finally {
            form.reset();
            submitText.classList.remove('hidden');
            loadingSpinner.classList.add('hidden');
            if (window.turnstile) window.turnstile.reset();
          }
        });

        closeOverlayBtn.addEventListener('click', () => {
          overlay.classList.add('hidden');
        });

        const container = document.querySelector('.turnstile-container');
        if (window.turnstile && container) {
          // Initialize Turnstile
          turnstile.render('.turnstile-container', {
            sitekey: CF_SITE_KEY,
            language: locale, // Set the locale to Arabic
            //match the body theme
            theme: document.documentElement.classList.contains('dark') ? 'dark' : 'light',
          });
        }
      });
    </script>
  </div>
</div>
