---
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Button from '~/components/ui/Button.astro';
import type { Testimonials as Props } from '~/types';
import ImageWithFallback from '../ui/ImageWithFallback.astro';

const {
  title = '',
  subtitle = '',
  tagline = '',
  testimonials = [],
  callToAction,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;


if(!testimonials || testimonials.length === 0) {
  return null;
}
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
    {
      testimonials &&
        testimonials.map(({ title, testimonial, name, job, image }) => (
          <div class="flex h-auto intersect-once motion-safe:md:intersect:animate-fade motion-safe:md:opacity-0 intersect-quarter">
            <div class="flex flex-col p-4 rounded-md shadow-xl md:p-6 dark:shadow-none dark:border dark:border-slate-600">
              {title && <h2 class="pb-4 text-lg font-medium leading-6">{title}</h2>}
              {testimonial && (
                <blockquote class="flex-auto">
                  <p class="text-muted">" {testimonial} "</p>
                </blockquote>
              )}

              <hr class="my-4 border-slate-200 dark:border-slate-600" />

              <div class="flex items-center">
                {image && (
                  <div class="w-10 h-10 border rounded-full border-slate-200 dark:border-slate-600">
                    {typeof image === 'string' ? (
                      <Fragment set:html={image} />
                    ) : (
                      <ImageWithFallback
                        class="w-10 h-10 min-w-full min-h-full border rounded-full border-slate-200 dark:border-slate-600"
                        width={40}
                        height={40}
                        alt={name!}
                        widths={[400, 768]}
                        layout="fixed"
                        {...image}
                      />
                    )}
                  </div>
                )}

                <div class="ml-3 grow rtl:ml-0 rtl:mr-3">
                  {name && <p class="text-base font-semibold">{name}</p>}
                  {job && <p class="text-xs text-muted">{job}</p>}
                </div>
              </div>
            </div>
          </div>
        ))
    }
  </div>
  {
    callToAction && (
      <div class="flex justify-center mx-auto mt-8 font-medium w-fit md:mt-12">
        <Button {...callToAction} />
      </div>
    )
  }
</WidgetWrapper>
