---
import Layout from '~/layouts/PageLayout.astro';
import { fetchCategoryPosts, fetchPage, fetchPost } from '~/api';
import { formatCustomDate, getContentForLocale, prepareContentFromJsonOrHTMLString } from '~/utils/utils';
import noBg from '~/assets/images/no-bg.webp';
import { Icon } from 'astro-icon/components';
import GridSection from '~/components/GridSection.astro';
import ImageWithFallback from '~/components/ui/ImageWithFallback.astro';
import MAIN_FOOTER from '~/components/home-page-sections/MAIN_FOOTER.astro';
import Footer from '~/components/widgets/Footer.astro';
import { footerData as FooterWithNoContent } from '~/navigation';
import SectionWrapper from '~/components/SectionWrapper.astro';
import Subscribe from '~/components/Subscribe.astro';
import VerticalSlider from '~/components/VerticalSlider.astro';
import LastNewsCard from '~/components/LastNewsCard.astro';
const locale = Astro.currentLocale || 'ar';
const postId = Astro.params.postId;
if (!postId) return Astro.redirect(`/${locale}/not-found`, 404);
const { data: post } = await fetchPost(postId, locale);
const homePage = (await fetchPage(1, locale)).data;
if (!post) return Astro.redirect(`/${locale}/not-found`, 404);
const similarPosts = await fetchCategoryPosts(6, locale, post?.category?.id+'');
//@TODO support english later
const content = await getContentForLocale(locale);
const metadata = {
  title: content.meta.title,
  description: content.meta.description,
  ignoreTitleTemplate: true,
};

const pageFooter = homePage?.sections.find((section) => section.component === 'MAIN_FOOTER');
const FooterComponent = pageFooter ? MAIN_FOOTER : Footer;
const FooterProps = pageFooter ? { section: pageFooter } : FooterWithNoContent(content);
---

<Layout metadata={metadata}>
  <Fragment slot="main">
    <div class="relative z-10 mx-4 rounded-md lg:mx-28 max-h-fit overflow-clip" data-cat-id={post?.category?.id}>
      <div
        class="absolute w-full h-full min-h-full bg-opacity-50 isolate -z-10 brightness-75 overflow-clip bg-secondary"
      >
        <ImageWithFallback
          class="inset-0 object-cover w-full h-full blur-lg"
          src={post.media?.find((media) => media.collection_name === 'Post_images')?.original_url || noBg}
          alt="slide-bg"
          lazy
          inferSize
        />
      </div>
      <div class="container px-4 pt-10 pb-5 mx-auto md:px-20">
        <div class="flex items-center justify-between">
          <a
            class="flex items-center gap-4 text-2xl text-white"
            title={post?.category?.title[locale || 'ar']}
            href={`/${locale}/category/${post?.category?.id}`}
          >
            <div
              id="category-link"
              class="z-10 grid w-16 h-16 px-4 rounded-lg place-items-center bg-primary dark:bg-secondary"
            >
              <Icon name="tabler:bookmark" class="w-full h-full text-white" />
            </div>
            <p>{post?.category?.title[locale || 'ar']}</p>
          </a>
          <span class="text-white">{formatCustomDate(post?.created_at, locale)}</span>
        </div>

        <p class="mt-6 max-w-[70ch] text-white text-opacity-70">
          <Fragment set:html={post?.short_description[locale]} />
        </p>
      </div>
    </div>
    <div
      class="container z-10 relative grid grid-cols-1 gap-6 pt-4 mx-auto pb-10 max-w-fit lg:mx-24 lg:grid-cols-[1.2fr_1fr]"
    >
      <div class="container flex flex-col items-start justify-between gap-4 px-4 pt-10 lg: lg:flex-row lg:gap-8">
        <div
          class="prose max-w-[90ch] md:prose-lg dark:prose-p:text-white dark:prose-strong:text-white lg:prose-xl pros-p:text-base prose-a:text-primary prose-img:rounded-xl dark:text-white dark:text-opacity-80"
        >
          <h1 class="dark:text-white dark:text-opacity-80">
            {post?.title[locale]}
          </h1>

          {
            !post.description ? null : (
              <Fragment set:html={prepareContentFromJsonOrHTMLString(post.description[locale])} />
            )
          }
        </div>
        <ul class="list-disc list-inside">
          {
            post.media
              .filter((item) => item.collection_name === 'Post_attachments')
              ?.map((attachment) => (
                <li>
                  <a
                    href={attachment.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-primary hover:underline"
                  >
                    {attachment.filename}
                  </a>
                </li>
              ))
          }
        </ul>
      </div>
      <div class="sticky flex-col hidden gap-4 mt-8 lg:flex top-12 scroll-mt-8">
        <VerticalSlider
          items={[
            ...(post.media
              ?.filter((item) => item.collection_name === 'Post_images')
              .map((image) => ({
                img: image.original_url,
                title: post.title,
                summary: prepareContentFromJsonOrHTMLString(post.short_description[locale], locale),
              })) || []),
          ]}
        />
      </div>
    </div>
    <div class="container relative z-10 grid grid-cols-1 gap-4 pb-20 mx-auto mt-8 lg:grid-cols-3">
      {
        similarPosts.data
          ?.filter((similarPost) => similarPost.id !== post.id)
          .slice(0, 3)
          .map((post) => ({
            category: post.category.title[locale],
            title: post.title[locale],
            short_desc: post.short_description[locale],
            desc: post.description[locale],
            img: post.media?.find((item) => item.collection_name === 'Post_images')?.original_url,
            link: `/${locale}/post/${post.id}`,
            date: post.created_at,
          }))
          ?.map((item) => {
            return <LastNewsCard overlayClass="bg-primary" {...item} />;
          })
      }
    </div>
  </Fragment>
  <!-- attachements post has attachements url , filename  -->
  <div class="container px-4 mx-auto mb-20 max-w-fit lg:mx-24">
    <SectionWrapper>
      <Subscribe />
    </SectionWrapper>
  </div>
  <Fragment slot="footer">
    <FooterComponent {...FooterProps} />
  </Fragment>
</Layout>
